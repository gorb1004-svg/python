

class Car:
# 클래스 카를 선언할거야.
    # 멤버 변수(필드)
    # 변수(필드)
gear = 0                                # 기어 상태는 0이고
on = False                              # 시동상태는 꺼졌어(False)

                                                                    # 그래서 Puppy와 Car 설명의 차이
                                                                    #
                                                                    # Puppy에서 ‘선언한다’
                                                                    # → “클래스를 코드로 만든다”라는 프로그래밍적 용어 강조.
                                                                    #
                                                                    # Car에서 ‘설계도 만든다’
                                                                    # → “클래스는 실제로는 설계도 같은 개념이다”라는 비유적 설명 강조.


# 생성자 - 클래스는 사용시 객체화를 하기 때문에 생성자는 필수다.
# 그런데 프로그래밍의 규칙중 하나는 너무나 당연하게 있어야 할것들은 생략이 가능하다.
def __init__(self):                     #def 정의해. init 생성자 함수 / 생성자 함수를 정의하는데 내용은 비워둔 상태.
    #pass                                #pass는 함수나 클래스에 아무것도 없을 때 오류방지를 위헤 넣는 키워드
# 혹시나 기어가 들어가 있거나 시동이 켜있을수있어 초기 상태로 되돌려 놓는다.
    self.gaer = 0
    self.on = False


# 멤버 함수 - 클래스 안의 생성자 함수들은 // 해당 객체를 표시하기 위한 self를 기본으로 가지고 있다.
def start(self):
    if self.on == False:                               # 만약 시동이 꺼져있으면 -> 시동을 걸어라.
        print('시동이 걸렸습니다.')
        self.on = True
    else:
        print('시동이 이미 걸려있습니다.')


def change(self, gear):
    print(f'{self.gear} 단으로 변속 했습니다.')
    self.gear += gear    pass

# Car 클래스를 객체화(복사)
# 객체를 통해 사용하고 싶은 멤버 호출
car = Car()
# 시동 걸기
car.start()
# 변속하기
car.change(3)
print(f'현재 car 의 gear 단수 : {car.gear}')

                                                            # 카라는 이름을 호출하면 인잇이 나온다.
                                                            # 해야할 것은
                                                            # 1. 시동걸기
                                                            # 2. 변속하기
                                                            #
                                                            # 시동걸기는
                                                            # 카에다가 스타트를 할것이고
                                                            #
                                                            # 변속하기(3)는
                                                            # 체인지로
                                                            # print(f'현재 car 의 gaer 단수: {car.gaer}')
                                                            #
                                                            # 시동이 걸렸습니다.
                                                            # 현재 car의 gaer 단수:3